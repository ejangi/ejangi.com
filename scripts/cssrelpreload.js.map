{"version":3,"sources":["../vendor/loadcss/src/loadcss.js","../vendor/loadcss/src/cssrelpreload.js"],"names":["w","loadCSS","href","before","media","ready","cb","doc","body","setTimeout","loadCB","ss","addEventListener","removeEventListener","ref","document","createElement","refs","getElementsByTagName","childNodes","length","sheets","styleSheets","rel","parentNode","insertBefore","nextSibling","onloadcssdefined","resolvedHref","i","exports","global","this","rp","relpreload","support","relList","supports","e","poly","links","link","getAttribute","run","setInterval","clearInterval","attachEvent"],"mappings":"CACA,SAAAA,GACA,YAEA,IAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAwBA,QAAAC,GAAAC,GACA,MAAAC,GAAAC,KACAF,QAEAG,YAAA,WACAJ,EAAAC,KAuBA,QAAAI,KACAC,EAAAC,kBACAD,EAAAE,oBAAA,OAAAH,GAEAC,EAAAP,MAAAA,GAAA,MAlDA,GAEAU,GAFAP,EAAAP,EAAAe,SACAJ,EAAAJ,EAAAS,cAAA,OAEA,IAAAb,EACAW,EAAAX,MAEA,CACA,GAAAc,IAAAV,EAAAC,MAAAD,EAAAW,qBAAA,QAAA,IAAAC,UACAL,GAAAG,EAAAA,EAAAG,OAAA,GAGA,GAAAC,GAAAd,EAAAe,WACAX,GAAAY,IAAA,aACAZ,EAAAT,KAAAA,EAEAS,EAAAP,MAAA,SAcAC,EAAA,WACAS,EAAAU,WAAAC,aAAAd,EAAAR,EAAAW,EAAAA,EAAAY,cAGA,IAAAC,GAAA,SAAArB,GAGA,IAFA,GAAAsB,GAAAjB,EAAAT,KACA2B,EAAAR,EAAAD,OACAS,KACA,GAAAR,EAAAQ,GAAA3B,OAAA0B,EACA,MAAAtB,IAGAG,YAAA,WACAkB,EAAArB,KAiBA,OALAK,GAAAC,kBACAD,EAAAC,iBAAA,OAAAF,GAEAC,EAAAgB,iBAAAA,EACAA,EAAAjB,GACAC,EAGA,oBAAAmB,SACAA,QAAA7B,QAAAA,EAGAD,EAAAC,QAAAA,GAEA,mBAAA8B,QAAAA,OAAAC,MC7EA,SAAAhC,GAEA,GAAAA,EAAAC,QAAA,CAGA,GAAAgC,GAAAhC,QAAAiC,aAsBA,IArBAD,EAAAE,QAAA,WACA,IACA,MAAAnC,GAAAe,SAAAC,cAAA,QAAAoB,QAAAC,SAAA,WACA,MAAAC,GACA,OAAA,IAKAL,EAAAM,KAAA,WAEA,IAAA,GADAC,GAAAxC,EAAAe,SAAAG,qBAAA,QACAW,EAAA,EAAAA,EAAAW,EAAApB,OAAAS,IAAA,CACA,GAAAY,GAAAD,EAAAX,EACA,aAAAY,EAAAlB,KAAA,UAAAkB,EAAAC,aAAA,QACA1C,EAAAC,QAAAwC,EAAAvC,KAAAuC,GACAA,EAAAlB,IAAA,SAMAU,EAAAE,UAAA,CACAF,EAAAM,MACA,IAAAI,GAAA3C,EAAA4C,YAAAX,EAAAM,KAAA,IACAvC,GAAAY,kBACAZ,EAAAY,iBAAA,OAAA,WACAZ,EAAA6C,cAAAF,KAGA3C,EAAA8C,aACA9C,EAAA8C,YAAA,SAAA,WACA9C,EAAA6C,cAAAF,QAIAX","file":"cssrelpreload.js","sourcesContent":["/*! loadCSS: load a CSS file asynchronously. [c]2016 @scottjehl, Filament Group, Inc. Licensed MIT */\n(function(w){\n\t\"use strict\";\n\t/* exported loadCSS */\n\tvar loadCSS = function( href, before, media ){\n\t\t// Arguments explained:\n\t\t// `href` [REQUIRED] is the URL for your CSS file.\n\t\t// `before` [OPTIONAL] is the element the script should use as a reference for injecting our stylesheet <link> before\n\t\t\t// By default, loadCSS attempts to inject the link after the last stylesheet or script in the DOM. However, you might desire a more specific location in your document.\n\t\t// `media` [OPTIONAL] is the media type or query of the stylesheet. By default it will be 'all'\n\t\tvar doc = w.document;\n\t\tvar ss = doc.createElement( \"link\" );\n\t\tvar ref;\n\t\tif( before ){\n\t\t\tref = before;\n\t\t}\n\t\telse {\n\t\t\tvar refs = ( doc.body || doc.getElementsByTagName( \"head\" )[ 0 ] ).childNodes;\n\t\t\tref = refs[ refs.length - 1];\n\t\t}\n\n\t\tvar sheets = doc.styleSheets;\n\t\tss.rel = \"stylesheet\";\n\t\tss.href = href;\n\t\t// temporarily set media to something inapplicable to ensure it'll fetch without blocking render\n\t\tss.media = \"only x\";\n\n\t\t// wait until body is defined before injecting link. This ensures a non-blocking load in IE11.\n\t\tfunction ready( cb ){\n\t\t\tif( doc.body ){\n\t\t\t\treturn cb();\n\t\t\t}\n\t\t\tsetTimeout(function(){\n\t\t\t\tready( cb );\n\t\t\t});\n\t\t}\n\t\t// Inject link\n\t\t\t// Note: the ternary preserves the existing behavior of \"before\" argument, but we could choose to change the argument to \"after\" in a later release and standardize on ref.nextSibling for all refs\n\t\t\t// Note: `insertBefore` is used instead of `appendChild`, for safety re: http://www.paulirish.com/2011/surefire-dom-element-insertion/\n\t\tready( function(){\n\t\t\tref.parentNode.insertBefore( ss, ( before ? ref : ref.nextSibling ) );\n\t\t});\n\t\t// A method (exposed on return object for external use) that mimics onload by polling until document.styleSheets until it includes the new sheet.\n\t\tvar onloadcssdefined = function( cb ){\n\t\t\tvar resolvedHref = ss.href;\n\t\t\tvar i = sheets.length;\n\t\t\twhile( i-- ){\n\t\t\t\tif( sheets[ i ].href === resolvedHref ){\n\t\t\t\t\treturn cb();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetTimeout(function() {\n\t\t\t\tonloadcssdefined( cb );\n\t\t\t});\n\t\t};\n\n\t\tfunction loadCB(){\n\t\t\tif( ss.addEventListener ){\n\t\t\t\tss.removeEventListener( \"load\", loadCB );\n\t\t\t}\n\t\t\tss.media = media || \"all\";\n\t\t}\n\n\t\t// once loaded, set link's media back to `all` so that the stylesheet applies once it loads\n\t\tif( ss.addEventListener ){\n\t\t\tss.addEventListener( \"load\", loadCB);\n\t\t}\n\t\tss.onloadcssdefined = onloadcssdefined;\n\t\tonloadcssdefined( loadCB );\n\t\treturn ss;\n\t};\n\t// commonjs\n\tif( typeof exports !== \"undefined\" ){\n\t\texports.loadCSS = loadCSS;\n\t}\n\telse {\n\t\tw.loadCSS = loadCSS;\n\t}\n}( typeof global !== \"undefined\" ? global : this ));\n","/*! CSS rel=preload polyfill. Depends on loadCSS function. [c]2016 @scottjehl, Filament Group, Inc. Licensed MIT  */\n(function( w ){\n  // rel=preload support test\n  if( !w.loadCSS ){\n    return;\n  }\n  var rp = loadCSS.relpreload = {};\n  rp.support = function(){\n    try {\n      return w.document.createElement( \"link\" ).relList.supports( \"preload\" );\n    } catch (e) {\n      return false;\n    }\n  };\n\n  // loop preload links and fetch using loadCSS\n  rp.poly = function(){\n    var links = w.document.getElementsByTagName( \"link\" );\n    for( var i = 0; i < links.length; i++ ){\n      var link = links[ i ];\n      if( link.rel === \"preload\" && link.getAttribute( \"as\" ) === \"style\" ){\n        w.loadCSS( link.href, link );\n        link.rel = null;\n      }\n    }\n  };\n\n  // if link[rel=preload] is not supported, we must fetch the CSS manually using loadCSS\n  if( !rp.support() ){\n    rp.poly();\n    var run = w.setInterval( rp.poly, 300 );\n    if( w.addEventListener ){\n      w.addEventListener( \"load\", function(){\n        w.clearInterval( run );\n      } );\n    }\n    if( w.attachEvent ){\n      w.attachEvent( \"onload\", function(){\n        w.clearInterval( run );\n      } )\n    }\n  }\n}( this ));\n"],"sourceRoot":"/source/"}